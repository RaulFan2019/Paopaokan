package com.app.pao.activity.run;

import android.content.Intent;
import android.os.Handler;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;

import com.app.pao.LocalApplication;
import com.app.pao.R;
import com.app.pao.activity.BaseAppCompActivity;
import com.app.pao.data.db.WorkoutData;
import com.app.pao.entity.db.DBEntityWorkout;
import com.app.pao.entity.event.EventNewWorkout;
import com.lidroid.xutils.view.annotation.ContentView;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.rey.material.widget.TextView;
import com.ypy.eventbus.EventBus;

/**
 * Created by Raul on 2015/11/19.
 * 倒计时界面
 */
@ContentView(R.layout.activity_start_run_count)
public class StartRunCountActivity extends BaseAppCompActivity {

    /* contains */
    private static final String TAG = "StartRunCountActivity";

    /**
     * local data
     **/
    private Animation mBigAnimation;// 变大动画
    private Animation mSmallAnimation;// 变小动画

    private int count = 3;// 计数数字
    private boolean isPrepare;//动画是否已准备好

    private DBEntityWorkout mDBWorkout;

    /**
     * 接收到workoutid信息
     *
     * @param event
     */
    public void onEventMainThread(EventNewWorkout event) {
        if (mDBWorkout.getName().equals(event.getWorkoutname())) {
            mDBWorkout.setWorkoutId(event.getId());
            WorkoutData.updateWorkout(mContext,mDBWorkout);
        }
    }


    /**
     * local view
     **/
    @ViewInject(R.id.tv_count_num)
    private TextView mCountTv;


    @Override
    protected void initData() {
        mBigAnimation = AnimationUtils.loadAnimation(this, R.anim.animation_tv_big);
        mSmallAnimation = AnimationUtils.loadAnimation(this, R.anim.animation_tv_small);
        int userId = LocalApplication.getInstance().getLoginUser(mContext).getUserId();
        mDBWorkout = WorkoutData.getUnFinishWorkout(mContext,userId);
    }

    @Override
    protected void initViews() {

    }

    @Override
    protected void doMyOnCreate() {
        EventBus.getDefault().register(this);
        animHandler.sendEmptyMessageDelayed(1, 1000);
    }

    @Override
    protected void updateData() {

    }

    @Override
    protected void updateViews() {

    }

    @Override
    protected void destroy() {
        EventBus.getDefault().unregister(this);
    }

    Handler animHandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            count--;
            if (count > 0) {
                mCountTv.setText("" + count);
            } else {
                count = 1;
                mCountTv.setText("1");
            }
            if (msg.what == 0) {
                mSmallAnimation.reset();
                mCountTv.startAnimation(mSmallAnimation);
                animHandler.sendEmptyMessageDelayed(0, 1000);
                // }
            } else {
                mBigAnimation.reset();
                mCountTv.startAnimation(mBigAnimation);
                if (count == 1) {
                    animHandler.removeMessages(1);
                    Intent intent = new Intent(StartRunCountActivity.this, RunningActivity.class);
                    startActivity(intent);
                    finish();
                } else {
                    animHandler.sendEmptyMessageDelayed(1, 1000);
                }
            }
        }

        ;
    };
}
